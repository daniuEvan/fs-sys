// Code generated by goctl. DO NOT EDIT!
// Source: upload.proto

package server

import (
	"context"

	"fs-sys/service/upload/rpc/internal/logic"
	"fs-sys/service/upload/rpc/internal/svc"
	"fs-sys/service/upload/rpc/upload"
)

type UploadServer struct {
	svcCtx *svc.ServiceContext
	upload.UnimplementedUploadServer
}

func NewUploadServer(svcCtx *svc.ServiceContext) *UploadServer {
	return &UploadServer{
		svcCtx: svcCtx,
	}
}

//  FileUpload 文件上传
func (s *UploadServer) FileUpload(ctx context.Context, in *upload.FileUploadRequest) (*upload.FileUploadResponse, error) {
	l := logic.NewFileUploadLogic(ctx, s.svcCtx)
	return l.FileUpload(in)
}

//  更新文件表 todo 与更新用户表的事务问题
func (s *UploadServer) UpdateFileTable(ctx context.Context, in *upload.UserTableUpdateRequest) (*upload.Empty, error) {
	l := logic.NewUpdateFileTableLogic(ctx, s.svcCtx)
	return l.UpdateFileTable(in)
}

//  更新用户文件表
func (s *UploadServer) UpdateUserTable(ctx context.Context, in *upload.UserTableUpdateRequest) (*upload.Empty, error) {
	l := logic.NewUpdateUserTableLogic(ctx, s.svcCtx)
	return l.UpdateUserTable(in)
}

//  秒传
func (s *UploadServer) FastUpload(ctx context.Context, in *upload.FastUploadRequest) (*upload.FastUploadResponse, error) {
	l := logic.NewFastUploadLogic(ctx, s.svcCtx)
	return l.FastUpload(in)
}

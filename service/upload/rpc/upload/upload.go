// Code generated by goctl. DO NOT EDIT!
// Source: upload.proto

package upload

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Upload interface {
		//  FileUpload 文件上传
		FileUpload(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadResponse, error)
		//  更新文件表 todo 与更新用户表的事务问题
		UpdateFileTable(ctx context.Context, in *FileMeta, opts ...grpc.CallOption) (*Empty, error)
		//  更新用户文件表
		UpdateUserTable(ctx context.Context, in *UserTableUpdateRequest, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultUpload struct {
		cli zrpc.Client
	}
)

func NewUpload(cli zrpc.Client) Upload {
	return &defaultUpload{
		cli: cli,
	}
}

//  FileUpload 文件上传
func (m *defaultUpload) FileUpload(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadResponse, error) {
	client := NewUploadClient(m.cli.Conn())
	return client.FileUpload(ctx, in, opts...)
}

//  更新文件表 todo 与更新用户表的事务问题
func (m *defaultUpload) UpdateFileTable(ctx context.Context, in *FileMeta, opts ...grpc.CallOption) (*Empty, error) {
	client := NewUploadClient(m.cli.Conn())
	return client.UpdateFileTable(ctx, in, opts...)
}

//  更新用户文件表
func (m *defaultUpload) UpdateUserTable(ctx context.Context, in *UserTableUpdateRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := NewUploadClient(m.cli.Conn())
	return client.UpdateUserTable(ctx, in, opts...)
}
